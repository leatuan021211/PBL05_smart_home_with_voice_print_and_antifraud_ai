from tabulate import tabulate
from colorama import Fore, Back, Style
import math

class DeviceTextDisplay:
    def __init__(self, devices,n_columns, title="My Smart Home"):
        self.devices = devices
        self.title = title
        self.n_columns = n_columns

    def display(self):
        # ƒê·ªãnh d·∫°ng danh s√°ch c√°c thi·∫øt b·ªã th√†nh b·∫£ng
        headers = [self.title.center(30)] * self.n_columns  # T·∫°o ti√™u ƒë·ªÅ cho m·ªói c·ªôt
        table = []
        for i in range(0, len(self.devices), self.n_columns):
            # Th√™m c√°c thi·∫øt b·ªã v√†o b·∫£ng theo h√†ng, m·ªói h√†ng t·ªëi ƒëa 3 thi·∫øt b·ªã
            row = [self.devices[i+j] if i+j < len(self.devices) else "" for j in range(self.n_columns)]
            # Thay ƒë·ªïi m√†u s·∫Øc c·ªßa c√°c h√†ng
            if (i/self.n_columns) % 2 == 0:
                rowa = []
                for device in row:
                    if 'ƒê√®n' in device:
                        rowa.append(Back.BLUE + device + 'üí°'+ ': _' + Style.RESET_ALL)
                    elif 'C·ª≠a' in device:
                        rowa.append(Back.BLUE + device + 'üö™'+ ': _' + Style.RESET_ALL)
                    else:
                        rowa.append("")

            elif (i/self.n_columns) % 2 == 1:
                rowa = []
                for device in row:
                    if 'ƒê√®n' in device:
                        rowa.append(Back.YELLOW + device + 'üí°'+ ': _' + Style.RESET_ALL)
                    elif 'C·ª≠a' in device:
                        rowa.append(Back.YELLOW + device + 'üö™'+ ': _' + Style.RESET_ALL)
                    else:
                        rowa.append("")
            table.append(rowa)

        # In b·∫£ng v·ªõi ƒë∆∞·ªùng vi·ªÅn
        print(tabulate(table, headers=headers, tablefmt="fancy_grid"))

# Danh s√°ch c√°c thi·∫øt b·ªã
devices = [
    "ƒê√®n garage",
    "C·ª≠a cu·ªën garage",
    "C·ª≠a tr∆∞·ª£t ph√≤ng kh√°ch",
    "ƒê√®n ph√≤ng kh√°ch",
    "C·ª≠a ph√≤ng ng·ªß ba m·∫π",
    "ƒê√®n ph√≤ng ng·ªß ba m·∫π",
    "C·ª≠a ph√≤ng ng·ªß con c√°i",
    "ƒê√®n ph√≤ng ng·ªß con c√°i",
    "ƒê√®n ph√≤ng b·∫øp"
]

n_columns = int(input("Nh·∫≠p s·ªë c·ªôt: "))




# T·∫°o instance c·ªßa class v√† hi·ªÉn th·ªã
device_display = DeviceTextDisplay(devices, n_columns)
device_display.display()